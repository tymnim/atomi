const t={scheduledJobs:new Map,jobsTimeoutId:null,scheduleJob:e=>{t.jobsTimeoutId||(t.jobsTimeoutId=setTimeout(t.executeScheduledJobs));const n=t.scheduledJobs.get(e);if(n)return n;let r;const s=new Promise(((t,e)=>{r=t}));return s.execute=async()=>{try{await e.execute()}finally{r()}},t.scheduledJobs.set(e,s),s},executeScheduledJobs:()=>{const e=t.scheduledJobs;t.jobsTimeoutId=null,[...e.entries()].forEach((async([t,n])=>{e.delete(t),await n.execute()}))}};class e{_guards=[];_currentGuard=0;space={};constructor(t){this.callback=t,this.stoped=!1,this.timesRun=0,this.deps=new Set,this.triggeredBy=new Set}get firstRun(){return this.timesRun<2}depend(t){this.deps.add(t),t.deps.add(this)}stop(){this.stopped=!0,this.deps.forEach((t=>t.deps.delete(this)))}resume(){this.stopped=!1,this.deps.forEach((t=>t.deps.add(this)))}execute(){if(this.stopped)return;this.timesRun+=1;const e=t.currentScope;t.currentScope=this,t.currentScope._currentGuard=0;const n=this.callback(this);if(t.currentScope=e,n instanceof Promise)return new Promise((async t=>{await n,this.triggeredBy.clear(),t()}));this.triggeredBy.clear()}die(){this.stoped=!0,this._guards.forEach((t=>t.die()))}trigger(e){if(!this.stopped)return this.triggeredBy.add(e),t.scheduleJob(this)}}class n{constructor(t){this.value=t,this.deps=new Set,this.get=this.get.bind(this),this.set=this.set.bind(this)}get(){return t.currentScope&&t.currentScope.depend(this),this.value}set(t){this.value=t;const e=[...this.deps].map((t=>t.trigger(this)));return Promise.all(e)}}const r=Symbol("none");function s(n,r=!1){const s=t.currentScope,c=new e(n);t.currentScope=c;const u=c.execute();return t.currentScope=s,u instanceof Promise&&!r?new Promise((t=>u.then((()=>t(c))))):c}function c(e){const n=t.currentScope;t.currentScope=null;const r=e();return t.currentScope=n,r}function u(t,e){return t!==e}function i(r,s=u){const c=t.currentScope;if(!c)return r();const i=c._currentGuard;c.firstRun&&(c._guards[i]=new e((t=>{t.space.name=`-- ${i}#guard --`,t.space.atom=new n(r()),t.callback=async t=>{const e=r();if(s(e,t.space.atom.value))return await t.space.atom.set(e)}})));const o=c._guards[i];return t.currentScope=o,o.execute(),t.currentScope=c,c._currentGuard++,o.space.atom.get()}function o(t){const e=new n(t),s={reactiveVar:e};return[Object.assign((function(){return e.get()}),s),function(t){return e.set(t)},function(t){const n=t(e.value,r);return n!==r?e.set(n):Promise.resolve()}]}function a(t){return!t}function d(t){return t}function h(t){return e=>e===t}function l(t){return e=>e<t}function p(t){return e=>e>t}const f=l(0),g=p(0);function m(t){return e=>e.map(t)}function b(t){return e=>e.filter(t)}function S(...t){return e=>[...t,...e]}function w(...t){return e=>[...e,...t]}function x(t,...e){return n=>[...n.slice(0,t),...e,...n.slice(t)]}function y(t,e){return(n,r)=>{const s=n.findIndex(t);return s>=0?(Object.assign(n,{[s]:e(n[s])}),n):r}}function v(t){return e=>(e.sort(t),e)}function J(t,e){return(t>e?1:t<e&&-1)||0}function _(t,e){return(t>e?-1:t<e&&1)||0}function j(t,e){let n=[];const[r,c]=o([]);return s((()=>{const r=t();let s=!1;const u=n.length;return n=r.map(((t,c)=>n[c]?.data===t&&n[c].index===c?n[c]:(s=!0,{data:t,result:e(t,c,r),index:c}))),s||u!==n.length?c(n.map((t=>t.result))):void 0})),r}function P(t,e){let n=[];const[r,c]=o([]);return s((()=>{const r=t();let s=!1;const u=n.length;return n=r.map(((t,c)=>{if(n[c]?.data===t)return n[c];s=!0;const u=n.find((e=>e.data===t));return u||{data:t,result:e(t,r)}})),s||u!==n.length?c(n.map((t=>t.result))):void 0})),r}function I(t,e){return()=>t().filter(e)}function R(t){return e=>e+t}function T(t){return e=>e-t}const B=R(1),E=T(1);function G(t){return e=>e**t}function k(t){return e=>Object.assign(e,t)}export{n as ReactiveVar,e as Scope,t as Tracker,R as add,w as append,J as asc,k as assign,y as assignWhere,o as atom,E as dec,_ as desc,b as filter,p as greater,i as guard,d as id,B as inc,x as insert,h as is,l as lesser,m as map,f as negative,c as nonreactive,a as not,I as ofilter,P as omap,j as omapEnumerated,g as positive,G as power,S as prepend,s as reactive,v as sort,T as sub};